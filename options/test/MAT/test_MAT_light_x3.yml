# general settings
name: MAT_light_x3
model_type: SRModel
scale: 3
num_gpu: 1
manual_seed: 0

datasets:
  test_1:  # the 1st test dataset
    name: Set5
    type: PairedImageDataset
    dataroot_gt: datasets/Set5/GTmod3
    dataroot_lq: datasets/Set5/LRbicx3
    io_backend:
      type: disk

  test_2:  # the 2nd test dataset
    name: Set14
    type: PairedImageDataset
    dataroot_gt: datasets/Set14/GTmod3
    dataroot_lq: datasets/Set14/LRbicx3
    io_backend:
      type: disk

  test_3:
    name: BSD100
    type: PairedImageDataset
    dataroot_gt: datasets/BSD100/GTmod3
    dataroot_lq: datasets/BSD100/LRbicx3
    io_backend:
      type: disk

  test_4:
    name: Urban100
    type: PairedImageDataset
    dataroot_gt: datasets/Urban100/GTmod3
    dataroot_lq: datasets/Urban100/LRbicx3
    io_backend:
      type: disk

  test_5:
    name: Manga109
    type: PairedImageDataset
    dataroot_gt: datasets/Manga109/GTmod3
    dataroot_lq: datasets/Manga109/LRbicx3
    io_backend:
      type: disk

# network structures
network_g:
  type: MAT
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 60
  num_block: 4
  expanded_ratio: 1
  squeeze_factor: 4
  depth: 4
  num_head: 6
  kernel_sizes: [7, 9, 11]
  dilations: [[1, 1, 1], [9, 7, 5]]
  rel_pos_bias: true
  dw_sizes: [1, 3, 5, 7]
  upscale: 3
  upsampler: 'pixelshuffledirect'

# path
path:
  pretrain_network_g: experiments/pretrained_models/MAT/MAT_light_x3.pth
  param_key_g: params_ema
  strict_load_g: true

# validation settings
val:
  save_img: false
  suffix: ~  # add suffix to saved images, if None, use exp name
  self_ensemble: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 3
      test_y_channel: true
      better: higher  # the higher, the better. Default: higher
    ssim:
      type: calculate_ssim
      crop_border: 3
      test_y_channel: true
      better: higher